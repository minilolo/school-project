{% extends 'admin/_base_admin.html.twig' %}
{% set menu_scolarite_list =true %}
{% set menu_scolarite =true %}
{% set menu_user =true %}

{% block title %}Scolarité{% endblock %}


{% block stylesheets %}
         <style>
                    #calendrier{
                        width: 80%;
                        margin : auto;
                    }     
        </style>
{% endblock %}
{% block content %}

{% endblock %}
{% block body %}

 <button class="btn btn-success">
             <h1>
                  <a href="{{ path('app_calendar_new') }}" >
                        <i class="ti-arrow-circle-left"></i>
                        Index
                  </a>
              </h1>          
 </button>
                

                <h1>
                    <a href="{{ path('app_calendar_new') }}" >
                        <i class="ti-arrow-circle-left" style="color: #0086aa">Créer un nouvel évenement</i>
                    </a>
                </h1>

 <div id="calendrier">
                       
 </div>
{% endblock %}

{% block javascripts %}
 <script >
          window.onload = () => {
            let calendarElt = document.querySelector('#calendrier')

            let calendar = new FullCalendar.Calendar(calendarElt, {
                initialView: 'dayGridMonth',
                local : 'fr',
                headerToolbar:{
                  start: 'prev,next today',
                  center: 'title',
                  end: 'dayGridMonth, timeGridWeek'
                },
                events: {{ data|raw }},
                editable : true,
                eventResizableFromStart: true
            })
            calendar.on('eventChange', (e) => {
              console.log(e.event)
              let url = `/api/${e.event.id}/edit`
              let didi = {
                "title": e.event.title,
                "description": e.event.extendedProps.description,
                "start" : e.event.start,
                "end" : e.event.end,
                "backgroundColor": e.event.backgroundColor,
                "borderColor": e.event.borderColor,
                "textColor": e.event.textColor,
                "allDay": e.event.allDay,
                "evenement": e.event.extendedProps.evenement
              }
              let xhr = new XMLHttpRequest();
              let vody = JSON.stringify(didi)
              console.log(JSON.stringify(didi))
              
              xhr.open("PUT", url)
              xhr.send(vody)
              
              
            })
            calendar.render()
          }             
 </script>
{% endblock %}
